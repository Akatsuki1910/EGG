前述のとおり、メンバーの一種にサービスアカウントがあります
サービスアカウントとは、個々のエンドユーザーではなく、アプリに属するアカウントを指します
これはユーザー認証情報を入力しなくても、プロジェクト内でサーバー間のやり取りを行えるIDを提供するものです
たとえばGoogle Cloud Storageとやり取りするアプリを作成する場合、まずGoogle Cloud Storage XML API、またはJSON APIに対して認証を行う必要があります
アプリを実行予定のインスタンスでサービスアカウントを有効にし、そのアカウントに読み取り/書き込みの権限を付与できます
次にサービスアカウントから認証情報を取得するようにアプリをプログラムします
インスタンス、イメージ、アプリコードに秘密鍵や認証情報を埋め込まなくても、アプリでAPIに対する認証がシームレスに行われます
サービスアカウントはこの例のようなメールアドレスで識別されます
サービスアカウントには３種類あります
ユーザーが作成したカスタムアカウント、組み込みのアカウント、Google APIのサービスアカウントです
デフォルトでは全プロジェクトにCompute Engineのデフォルトのサービスアカウントが組み込まれています
このサービスアカウントとは別に、全プロジェクトにはGoogle Cloud APIのサービスアカウントも用意されており、project-number@cloudservices.gserviceaccount.comというメールアドレスで識別できます
これはGoogleの内部処理を代行するために特別に設計されたアカウントで、プロジェクトの編集者ロールが自動的に付与されます
カスタムサービスアカウントを使用してインスタンスを開始することもできます
カスタムサービスアカウントは、デフォルトのサービスアカウントよりも柔軟性が高い反面、よりきめ細かな管理が必要です
カスタムサービスアカウントは必要な数だけ作成でき、任意のアクセススコープやCloud IAMロールを割り当て、任意のVMインスタンスに割り当てられます
Compute Engineのデフォルトのサービスアカウントについて説明します
前述のとおりこのアカウントはプロジェクトごとに自動作成されます
このアカウントは、project-number-compute@developer.gserviceaccount.comというメールアドレスで識別でき、プロジェクトの編集者ロールが自動的に付与されます
gcloudで新しいインスタンスを開始すると、デフォルトのサービスアカウントがそのインスタンスに組み込まれます
この挙動を無効にするには、別のサービスアカウントを指定するか、インスタンスに対してサービスアカウントを無効にします
認可とは指定された一連のリソースに対して、認証済みIDにどのような権限を付与するかを決定するプロセスを指します
スコープは、認証済みIDが認可されているかどうかを判断するために使用されます
この例ではアプリAとBに認証済みID（サービスアカウント）が含まれています
どちらのアプリでもCloud Storageバケットを使用したい場合、それぞれがGoogle承認サーバーにアクセスをリクエストし、アクセストークンを取得します
アプリAが取得したアクセストークンは読み取り専用スコープであるため、Cloud Storageバケットからの読み取りのみが可能です
一方アプリBが取得したアクセストークンは読み取り/書き込みスコープであるため、Cloud Storageバケットのデータの読み取りと変更が可能です
スコープをカスタマイズするには図のように、デフォルトのサービスアカウントでインスタンスを作成します
これらのスコープはインスタンス作成後でも停止すれば変更できます
実際のところアクセススコープはVMの権限を指定するには古い方法で、IAMロールがリリースされる前はサービスアカウントへの権限付与の唯一のメカニズムがアクセススコープでした
ユーザーが作成したサービスアカウントについては、権限を指定せずCloud IAMロールを使用します
サービスアカウントのロールはグループやユーザーにも割り当てられます
スライドの例をご覧ください
まずインスタンス管理者ロールを付与したサービスアカウントを作成し、VMのインスタンスとディスクの作成、変更、削除を許可します
次にこのサービスアカウントをリソースとして扱い、ユーザーやグループにサービスアカウントユーザーのロールを付与して、使用を許可するユーザーを指定します
これによりユーザーはサービスアカウントとしてVMのインスタンスとディスクを作成、変更、削除できます
サービスアカウントユーザーは、そのサービスアカウントがアクセス権を持つ全リソースにアクセスできます
そのためユーザーやグループにサービスアカウント、ユーザーロールを付与する際は注意が必要です
もう１つの例をご紹介します
component_1を実行するVMにサービスアカウント１を使用して、project_bへの編集者権限を付与します
component_2を実行するVMに独立したサービスアカウント２を使用して、bucket_1に対するオブジェクト閲覧者権限を付与します
こうするとVMを再作成しなくてもVMの権限のスコープを指定できます
基本的にCloud IAMでは、１つのプロジェクトを複数の異なるマイクロサービスに分割し、それぞれにサービスアカウントを作成して、それぞれ異なるリソースにアクセスすることができます
VMの作成時にサービスアカウントを割り当てれば、認証情報が適切に管理されていることを確認する必要がありません
Google Cloudでセキュリティが管理されるからです
ではサービスアカウントはどのように認証されるのでしょうか
Googleのサービスアカウントは２種類あります
Compute EngineやApp Engineといった、Google Cloud内でサービスアカウントを使用する場合は、サービスアカウントの鍵はデフォルトでGoogleが自動的に管理します
ただしGoogle Cloud外でサービスアカウントを使用したい場合や、ローテーション期間を変更したい場合は、サービスアカウントの鍵を手動で作成、管理することも可能です
すべてのサービスアカウントにはGoogleが管理する鍵ペアがあります
Googleが管理するサービスアカウントの鍵では、Googleが鍵の公開部分と秘密部分の両方を保存し、定期的にローテーションを行います
各公開鍵は最大２週間署名に使用できます
秘密鍵は常にエスクローで安全に保管され、直接アクセスすることはできません
ユーザーが管理する鍵ペアを１つ以上任意で作成できます
これは外部鍵とも呼ばれ、Google Cloudの外部から使用できます
Googleはユーザーが管理する鍵の公開部分のみを保存します
秘密鍵のセキュリティ確保と鍵のローテーションなどその他の管理については、ユーザーが責任を負います
手動かプログラムによるものかは問いません
鍵のローテーションの簡易化のため、１つのサービスアカウントにつき、サービスアカウントキーを10個まで作成できます
ユーザーが管理する鍵はCloud IAM API gcloudコマンドラインツールまたは、Cloud Consoleの[サービスアカウント]ページで管理できます
ユーザーが管理する秘密鍵はGoogleに保管されないので、紛失してもGoogleは復旧をサポートできません
鍵の安全な保管と鍵のローテーションは、お客様の責任となります
ユーザーが管理する鍵は最終手段とし、別の方法をご検討ください
たとえば有効期限が短いサービスアカウントの認証情報、トークンサービスアカウントの権限借用などです
特定のサービスアカウントに関連付けられたすべての鍵を表示するには、スライドに示すgcloudコマンドを使うのが最も簡単です
