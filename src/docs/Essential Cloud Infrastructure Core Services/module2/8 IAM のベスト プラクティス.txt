ここでは学んだ概念を日々の業務に活かせるよう、Cloud IAMのベストプラクティスをいくつか説明します
まずリソース階層を活用、理解します
具体的にはプロジェクトを使用して、同じ信頼境界を共有するリソースをグループ化します
各リソースに付与されたポリシーを確認し、継承について把握します
ロールは継承されるため、ロールの付与には最小権限の原則を使用します
最後に、Cloud Audit Logsを使用してポリシーを監査し、ポリシーで使用されるグループのメンバーシップを監査します
次に、ロールは個人ではなくグループに付与することをおすすめします
これにより、Cloud IAMポリシーを変更する代わりに、グループメンバーシップを更新できます
この場合はポリシーで使用されるグループのメンバーシップを監査し、Cloud IAMポリシーで使用されるGoogleグループのオーナー権限を制御します
複数のグループを使用して、より細かく制御することも可能です
この例では、ネットワーク管理者グループがあります
Cloud Storageバケットに対するread_writeのロールが必要なメンバーと、read_onlyのロールが必要なメンバーが含まれています
この３つのグループで個人を追加、削除することで、全体のアクセスを制御できます
したがってグループは、職務に関連付けられるだけでなく、ロールの割り当てにも有効です
サービスアカウントの使用に関するベストプラクティスを紹介します
前述のように、サービスアカウントユーザーロールの付与には注意が必要です
サービスアカウントが、アクセス可能なすべてのリソースにアクセスできるようになるからです
またサービスアカウントを作成する場合は、その目的を明確に示す表示名を付けます
できれば確立された命名規則を使用してください
鍵については鍵のローテーションのポリシーと方法を定め、serviceAccount.keys.list()メソッドを使用して鍵を監査します
最後にCloud Identity-Aware Proxy（Cloud IAP）の使用をおすすめします
Cloud IAPではHTTPSでアクセスするアプリのための一元的な承認レイヤを確立できます
そのためネットワークレベルのファイアウォールに依存せずに、アプリレベルのアクセス制御モデルを使用できます
Cloud IAPによって保護されたアプリやリソースにアクセスできるのは、適切なIAMロールを持つユーザーやグループが、このプロキシを通じてアクセスする場合だけです
ユーザーにCloud IAPのアプリやリソースへのアクセスを許可すると、使用中のプロダクトによって実装されたきめ細かいアクセス制御が適用されるため、VPNを使用する必要がありません
ユーザーがCloud IAPで保護されたリソースにアクセスしようとすると、Cloud IAPが認証と承認のチェックを行います
右の図のとおりです
Cloud IAPについて詳しくはこの動画のリンクセクションをご覧ください
