Stackdriver Monitoringの概要について説明しました
プロジェクトのモニタリング、複数の条件を指定したアラートの作成、ダッシュボードへのグラフの追加、リソースグループの作成、サービスの稼働時間チェックの作成を学びました
モニタリングはアプリの健全性に不可欠です
Stackdriverには、インフラのモニタリング、モニタリングデータの可視化、アラートとイベントのトリガーを行うための豊富な機能が備わっています
ラボのチュートリアルは引き続き参照できますが、GCPのUIは変更されることがあり、実際の環境と若干異なる場合があります
「Stackdriverを用いたリソースモニタリング」のチュートリアルへようこそ
Qwiklabsラボで提供された認証情報を使用して、GCP Consoleにログインしている状態です
最初のタスクでは、このラボのDeployment Managerを使用して、適切なVMが設定されていることを確認します
ご覧のように、nginxstackという３つのVMが設定されています
インスタンスが作成されて実行中であることが確認できたので、Stackdriver Monitoringにアクセスして新しいタブを開きます
プロジェクトのワークスペースが作成されます
これは数分かかる場合がありますので、しばらくお待ちください
ワークスペースの設定が完了すると、モニタリングの概要ページにリダイレクトされます
ラボにいくつかの問題が用意されていますが、単に理解度をチェックするためのものなので、完了しなくてもラボのスコアには影響しません
タスク２はダッシュボードの作成です
[Monitoring Overview]で、[Create Dashboard]をクリックします
ダッシュボードにMy Dashboardと名付けます
次にグラフを追加します
タイトルはMy Chartとします
[GCE VM Instance]を指定し、指標には[CPU utilization]を選択します
[CPU utilization]です
フィルタを追加します
さまざまなオプションが用意されており、リソースラベルやメタデータラベルでフィルタできます
フィルタは追加せずに他も見てみましょう
[View options]をクリックすると、グラフモードが表示されます
カラーモードやX線モードは、右側でプレビューできます
統計モードもありますが、個人的にX線モードが好きなので、これを選択して[保存]をクリックすると、このとおりダッシュボードにグラフが追加されます
さらに[Metrics Explorer]では、ダッシュボードでグラフを作成しなくても、リソースと指標を調べることができます
[Resources] > [Metrics Explorer]に移動します
[Find resource type and metric]に指標名かリソース名を入力します
ここでは[CPU utilization]を使用します
ご覧のようにグラフを追加しなくても、指標を調べられます
ラボに別の問題が出されていますが、これもまた理解を促すためのものです
次はアラートを作成して最初の条件を追加しましょう
[Create a Policy]を選択して、[Add Condition]をクリックします
[GCE VM Instance]を選択します
指標には[CPU usage]を使用します
条件は[is above]、それから１分間のしきい値を20に指定して[Save]をクリックします
さらに条件を追加します
別のVMを対象にします
これを選択して指標も別のものを使いましょう
[Reserved cores]を選択します
15より上と指定して[Save]をクリックします
[Policy Triggers]で、[ALL conditions are met]を選択します
次に通知を設定して、ポリシーがトリガーされたらわかるようにします
これをクリックし、[Email]を選択してメールアドレスを入力したら、追加します
追加されました
[Documentation]は今回省略しますが、実際は通知の重要な部分です
発生した事象やその原因を通知の受信者に伝える必要があります
具体的な解決方法も示すことをおすすめします
解決方法がわからなければ、有用な通知とは言えません
このポリシーに名前を付けます
[My first alerting policy]として、[Save]をクリックします
アラートポリシーの作成はラボのチェックポイントなので、進行状況を確認してください
次のタスクはグループの作成です
[Create Group]を選択して、グループ名をVM instancesとします
[Name]は変えずに、[Contains]もそのままで、「nginx」と入力します
[Save Group]をクリックします
ご覧のように３つのインスタンスがすべて表示されています
名前がnginxstackと一致しているからです
ここでも理解度をチェックする問題が出されています
ラボで提供されるすべての情報を把握しているか確認するためのものです
ダッシュボードに戻ります
[Uptime Checks]に移動して、[Overview]>[Add Uptime Check]をクリックします
タイトルはMy First Uptime Checkとし、[HTTP]を使用します
[Instance]を確認するためです
適用先を[Group]にして作成した[VM instances]を指定します
チェック頻度は[1 minute]のままで、[Save]をクリックします
[Test]で動作確認もできます
今はアラートポリシーを作成しないので、[No thanks]をクリックします
[進行状況を確認]をクリックして、最後の確認を行い、稼働時間チェックの作成を確かめます
作成されていれば満点を獲得できます
このラボではプロジェクトのモニタリング、Stackdriverワークスペースの作成、複数の条件を指定したアラートの作成、ダッシュボードへのグラフの追加、リソースグループの作成を行い、最後にサービスの稼働時間チェックを作成しました
