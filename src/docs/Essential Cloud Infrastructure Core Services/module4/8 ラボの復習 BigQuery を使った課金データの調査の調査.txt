このラボでは、CSVファイルとしてエクスポートした課金データをBigQueryにインポートし、まずはそのデータに単純なクエリを実行しました
次に課金情報レコードが22,000件を超える共有データセットにアクセスし、このデータに各種クエリを実行することで、BigQueryを使用してリソース課金の消費に関する分析情報を取得する方法を確認しました
定期的にBigQueryを使用する場合は、アプリ内でリソースが消費される場所を特定する独自のクエリを開発できます
リソース消費の経時的な変化をモニタリングすることもできます
このような分析情報をキャパシティプランニングで利用すれば、アプリをスケールアップして増加に対応したり、スケールダウンして効率性を改善したりする方法を判断できます
「BigQueryを使った課金データの調査」ラボのチュートリアルへようこそ
Qwiklabsで提供されたユーザー名とパスワードを使って、すでにログインしています
最初のタスクはBigQueryを使用したデータのインポートです
事前に請求管理者として課金データをエクスポートし、バケットに保存してあります
BigQueryに移動してデータをインポートしましょう
Cloud Consoleで作業します
BigQueryにログイン済みで、上部で正しいQwiklabsプロジェクトIDが選択されていることを確認します
これを選択して、[データセットを作成]をクリックします
imported_billing_dataという名前を付けます
データのロケーションは米国です
有効期限は１日に設定して、[データセットを作成]をクリックします
データセットが作成されてここに表示されました
次はこのデータセットにテーブルを作成するので、[テーブルを作成]をクリックします
ソースにはCloud Storageを使用し、バケットのロケーションをラボからコピーして貼り付けます
形式はCSVです
送信先としてネイティブテーブルを使用し、名前をsampleinfotableとします
[スキーマ]の[自動検出]をオンにして、データセットのスキーマと入力パラメータが検出されるようにします
[詳細オプション]を開き、ヘッダーの行をスキップするように指定します
[テーブルを作成]をクリックします
この時点でラボの進行状況を確認できます
[進行状況を確認]をクリックすると、データセットとテーブルが作成されてデータをインポート済みであれば
５点を獲得できます
タスク２は取り込んだデータの検証です
テーブルをクリックすると、デフォルトではスキーマが表示されます
[詳細]をクリックすると詳細情報が表示されます
行数が44というかなり小さなテーブルです
[プレビュー]をクリックすると、テーブルの最初の数行が表示されます
ラボには、学習内容の理解度をチェックするために、問題がいくつか用意されています
内容を理解しているか確認するための問題なので、ここでは取り上げません
タスク３の簡単なクエリの作成に進みます
BigQueryの便利な機能をいくつか紹介します
テーブルを開いた状態で、[テーブルをクエリ]をクリックすると、クエリエディタにプロジェクト、データセット、テーブルがデフォルトで自動入力されます
このため検索対象を指定するだけで、クエリを作成できます
アスタリスクを指定して、where cost > 0と入力します
このテーブル内で、費用が０より大きい行のみを見つけます
ご覧のように、このSQLが有効であることが検証されています
[実行]をクリックします
クエリ結果が表示されテーブル内の44行のうち、費用が０より大きいのは20行であることがわかります
ここでもいくつか問題が用意されており、進行状況も確認できます
クエリを実行していれば５点獲得できます
この時点でラボで付与される点は、すべて獲得したことになりますが、より複雑なクエリを実行するタスクが残っています
タスク４のクエリをコピーし、これを消去して貼り付けます
有効なクエリであることを確認して、[実行]をクリックします
結果を検証しましょう
ラボの指示によると、22,537行の課金データが返されるはずです
確認してみましょう
間違いありません
次に課金が０より大きい最新の100レコードを検索します
提供されているクエリをコピーして貼り付けます
SQLが有効かどうか、必ず確認することをおすすめします
[実行]をクリックします
課金が０より大きい最新の100レコードが表示されます
３ドルを超えた課金をすべて特定する場合は、次のクエリを使って確認できます
複雑なクエリが用意されているので、それぞれ実行してみてください
データを詳しく調べられるので、過去２日間の10ドルを超える課金を特定するなど、独自のクエリを試すこともできます
あらゆるクエリを使って、GCPでのリソース使用の料金を上層部などに示すためのデータなどを取得できます
複雑なクエリを確認しました
ここまでの操作をまとめると、請求管理者によって事前にエクスポートされた課金データを、BigQueryにインポートしてから、単純なクエリと複雑なクエリを実行しました
ラボは以上です
ありがとうございました
