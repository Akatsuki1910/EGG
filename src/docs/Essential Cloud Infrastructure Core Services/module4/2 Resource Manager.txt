Resource Managerでは、プロジェクト、フォルダ、組織ごとに階層的にリソースを管理できます
これについては、「Cloud IAM」モジュールで説明しましたが、復習しておきましょう
一連のロールとメンバーを含むポリシーがリソースに設定されます
左に示すように、リソースは親からポリシーを継承するため、リソースポリシーは親とリソース自身のポリシーを合わせたものになります
リソースポリシーより、親ポリシーの制限が緩い場合、親ポリシーが優先されることにも注意してください
IAMポリシーは上から下へ継承されますが、右に示すように課金は下から順に累積されます
リソースの消費は使用率や時間の割合、アイテム数、機能の使用率などと同様、量で測定されます
リソースが属するプロジェクトは１つのみなので、プロジェクトにはその全リソースの消費量が累積されます
各プロジェクトに１つの請求先アカウントが関連付けられています
つまり組織には、すべての請求先アカウントが含まれます
組織、プロジェクト、リソースを詳しく見ていきましょう
繰り返しますが、組織ノードはすべてのGCPリソースのルートノードです
この図の例ではBobという人物が、組織管理者ロールで組織ドメインを管理しています
BobはAliceをプロジェクト作成者に指定し、個々のプロジェクトの権限とアクセス権を委任しています
プロジェクトに全リソースの消費量が累積されるので、プロジェクトを使用してリソースと割り当て使用量を追跡できます
具体的にはプロジェクトで課金の有効化、権限と認証情報の管理、サービスとAPIの有効化を行います
GCPリソースとやり取りするには、リクエストごとにプロジェクト識別情報を提供する必要があります
プロジェクトはプロジェクト名で識別できます
人が読める形式でプロジェクトを識別する方法ですが、Google APIでは使用されません
プロジェクト番号でも識別できます
サーバーで自動生成されてプロジェクトに割り当てられるものです
プロジェクトIDもあります
プロジェクト名から生成される一意のIDです
これら３つの識別属性はGCP Consoleのダッシュボードで確認するか、Resource Manager APIに対するクエリで確認できます
最後にリソース階層について説明します
物理構成の観点から見て、リソースはグローバル、リージョン、ゾーンに分類されます
たとえばイメージ、スナップショット、ネットワークはグローバルリソースです
外部IPアドレスはリージョンリソースで、インスタンスとディスクはゾーンリソースです
ただし種類に関係なく各リソースは１つのプロジェクトに属します
このためプロジェクトごとに独自の課金とレポート作成が可能です
