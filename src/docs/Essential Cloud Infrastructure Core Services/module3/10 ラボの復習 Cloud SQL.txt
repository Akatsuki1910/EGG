このラボでは、Cloud SQLデータベースを作成して２つの接続を構成しました
セキュアプロキシを介した外部接続と、セキュアで高速なプライベートIPアドレスによる接続です
プライベートIPで接続できるのは、アプリとCloud SQLサーバーが同じリージョン内に配置されていて、同じVPCネットワーク内にある場合のみです
アプリが別のリージョン、VPCプロジェクトでホストされている場合は、プロキシを使用して外部接続経由の接続を保護します
GCPのUIは変更されることがあります
ラボの手順に影響はありませんが、各自の環境でUIが異なる場合があります
Cloud SQL実装のチュートリアルへようこそ
この時点で、Qwiklabsから提供されたユーザー名とパスワードでログイン済みです
最初のタスクでは、Cloud SQLデータベースを作成します
[SQL]に移動します
[インスタンスを作成]をクリックします
[MySQL]を選択します
「wordpress-db」という名前を付けます
パスワードとして「password」を使います
パスワードは単純なものにすることをおすすめします
[us-central1]を使用します
構成オプションを展開します
[接続]で[プライベートIP]を選択します
[APIを有効にする]をクリックします
有効になったら、[割り当てて接続]をクリックします
この処理が完了するまで３～５分かかります
しばらくお待ちください
完了すると、[作成]ボタンが有効になります
ラボで説明している他の設定を、自由に確認してください
マシンタイプを構成したり、ストレージ容量を変更したりするための設定があります
ゼロを追加するとスループットが増加します
「10」に戻して、[閉じる]をクリックします
この処理も３～５分かかります
しばらくお待ちください
完了すると[作成]が有効になります
IPが割り当てられたので、[作成]をクリックします
作成されました
時間がかかりましたが、Cloud SQLインスタンスを作成するときはさらに時間がかかります
しばらく待つ必要がありますが、この間にラボの別のステップを進めます
ステップ15の検証です
これには、Cloud SQLインスタンスが稼動中で、緑のチェックマークが付いている必要があります
これが完了するまでは、そのステップで５ポイントを獲得できません
待っている間に他のステップを進めましょう
処理が行われている間、別のタブを開いて処理の進捗を確認できるようにします
[Compute Engine]に移動します
メニューから移動することも、インスタンスのタイルから移動することもできます
２つのインスタンスが自動的に作成されています
wordpress-europe-proxyはCloud SQLインスタンスのプロキシです
もう１つはプライベートIPインスタンスです
こちらの[SSH]をクリックします
準備ができたらSSHで接続して、Cloud SQL Proxyをダウンロードして実行可能にします
「wget」と入力してEnterキーを押します
プロキシがコピーされて実行可能になります
プロキシを起動するには、Cloud SQLインスタンスの接続名が必要です
インスタンスは稼働中でなければりません
このページに戻ってステータスを確認します
更新して確認します
まだ処理中ですが、クリックすると、接続名の有無を確認できます
ありました
表示されている接続名をコピーして、SSHウィンドウに戻ります
接続インスタンスを格納する環境変数を作成します
「export SQL_CONNECTION=」と入力します
コピーした接続名を貼り付けます
環境変数が設定されたことを確認するには、echo SQL_CONNECTIONを入力します
スペルを間違えました
これで出力が表示されます
とりあえずここまでにします
残りのステップでは、Cloud SQLインスタンスが稼動中である必要があるためです
まだ作成中です
データベースはまだ作成できません
この画面はこのままにしておきます
データベースを作成できる状態になったら、次のステップで必要になります
インスタンスが稼動中の状態になりました
Cloud SQLに移動するとwordpress-dbの横に緑のチェックマークが示されているはずです
実行可能とあります
先ほど飛ばしたデータベースを作成するステップを行います
「wordpress」という名前のデータベースを作成します
[作成]をクリックします
次に移動するのは、SSHウィンドウです
環境変数が設定されていることを確認します
確認できたら、SQLデータベースへのプロキシ接続を有効にします
これを実行します
バックグラウンドで実行します
新しい接続の準備が完了していることが、出力に示されます
Enterキーを押します
ここでもラボで[進行状況を確認]をクリックできます
この時点でラボの10ポイントすべてを獲得しているはずですが、もう１つステップが残っています
タスク３です
実際にはタスク３とタスク４で、アプリをCloud SQLインスタンスに接続します
wordpressアプリを構成します
それには「curl」コマンドをコピーして、実行します
これによって、仮想マシンの外部IPアドレスが出力されます
それをコピーして、ここで開きます
[Let's Go]をクリックします
ユーザー名を「root」に変えます
その他はデフォルトのままにします
先ほど定義した「password」をパスワードとして入力します
データベースホストとして、localhost IPを使用します
「127.0.0.1」です
[Submit]をクリックします
接続が確立されると、WordPressをインストールできるようになります
[Run the Installation]をクリックします
完了するまで時間がかかります
完了すると成功ウィンドウが表示されます
ラボをどこから実行しているかによっては、完了するまでに３分程度かかることもあります
ここでは短時間で完了しました
接続が確立されたら、アドレスバーで外部IPに渡したすべての情報を削除します
Deleteキー、Enterキーを押します
読み込みが完了すると、私のブログが表示されるはずです
インストールはまだ進行中のようなので、待っている間に重要ではない情報を追加します
「My Fake Site Title」、「anyusername」と入力し、パスワードはそのままにします
「m@b.com」と入力してインスト―ルします
これは先に飛ばしたステップ７です
完了していたらスキップしてください
インスト―ルが完了しました
外部IPの後に続くすべての情報を削除します
Enterキーを押すと、私のブログにリダイレクトされるはずです
「Hello World!」
これが私のブログです
成功しました
最後のタスクでは、Cloud SQLに内部IPで接続します
ここに戻って[SQL]とGCPに移動します
wordpress-dbをクリックします
プライベートIPアドレスをメモします
このアドレスをメモ帳にコピーしておきます
後で他の事項もコピーすることになるからです
クリップボードにコピーしておいてください
次に[Compute Engine]に移動します
このページで必要な作業は、WordPressプライベートIPに対する外部IPアドレスをコピーすることです
コピーしてから新しいタブに貼り付けて、Enterキーを押します
[Let's Go]をクリックします
データベース名は変えずに、ユーザー名を「root」に変更します
前に入力したパスワードは変えません
前にメモ帳にコピーしておいた、SQLプライベートIPを貼り付けます
IPを見つけて、ここにコピーします
[Submit]をクリックします
[Run the Installation]をクリックすると、インストール済みと示されます
プロキシを構成する代わりに、プライベートIPへの直接接続が作成されました
この接続はプライベートです
この部分を削除すると、同じプライベートIPでブログにアクセスできます
このラボでは、Cloud SQLデータベースを作成して、安全なプロキシを介した外部接続とプライベートIPを使用するように構成しました
お疲れさまでした
