Cloud StorageはGoogle Cloudの世界規模のオブジェクトストレージサービスで、データの保存や取得がいつでも、いくらでも可能です
使用できるシナリオは幅広く、ウェブサイトのコンテンツ配信、アーカイブと障害復旧用のデータ保存、直接ダウンロードによる大規模なデータ配布などがあります
Cloud Storageの主な特長は、エクサバイト規模まで拡張可能なこと、最初のバイトの転送時間がミリ秒単位であること、すべてのストレージクラスにわたり可用性が高いこと、単一のAPIですべてのストレージクラスに対応できることです
Cloud Storageはファイルシステム内のファイルとは違います
オブジェクトを格納するバケットの集合です
いわゆるディレクトリを作成できますが、ディレクトリはバケット内の別のオブジェクトを参照するオブジェクトです
ファイルシステムのようには簡単に、全ファイルのインデックスを作成できません
オブジェクトには固有のURLでアクセスします
Cloud Storageのストレージクラスは、Standard、Nearline、Coldline、Archiveの４つです
各ストレージクラスに３つのロケーションタイプがあります
マルチリージョンは米国などの広い地理的エリアで、２つ以上の地理的な場所が含まれます
デュアルリージョンは、フィンランドとオランダなど、特定のリージョンのペアです
リージョンはロンドンなどの特定の地理的な場所です
マルチ/デュアルリージョンに保存されたオブジェクトは地理的に冗長です
各ストレージクラスを見ていきましょう
Standard Storageが適しているのはアクセス頻度の高い“ホット”データや、短時間だけ保存されるデータです
最も高価なストレージクラスですが、最小保存期間はなく取得費用もかかりません
リージョンで使用する場合、Standard Storageはデータを使用するGKEクラスタや、Compute Engineインスタンスと同じ場所にデータを保存するのに適しています
リソースを共通の場所に配置すると、データ集約型の演算パフォーマンスを最適化し、ネットワーク料金も削減できます
デュアルリージョンで使用する場合、リージョンペアのいずれかに配置されたプロダクトにアクセスする際は、パフォーマンスが最適化されます
また、地理的に離れた場所に保存されているデータの可用性も向上します
マルチリージョンで使用する場合、世界中でアクセスされるデータの保存に適しています
ウェブサイトのコンテンツ配信、動画のストリーミング、対話型ワークロードの実行、モバイルアプリやゲームアプリへのデータ提供などです
Nearline Storageは低コストで耐久性の高いストレージで、アクセス頻度の低いバックアップデータやロングテールコンテンツの保管、アーカイブに適しています
NearlineがStandardよりも適しているシナリオは、可用性が若干低く30日の最小保存期間が適用されて、データアクセスで費用が発生するとしても、保存時のストレージコストを抑えたい場合です
Coldline Storageは極めて低コストで耐久性が高いストレージで、アクセス頻度の低いデータの保存に適しています
ColdlineがStandardやNearlineよりも適しているのは、可用性が若干低く90日の最小保存期間が適用されて、データアクセスの費用が高くても保存時のストレージコストを抑えたい場合です
Archive Storageは最も低コストで耐久性に優れたストレージで、アーカイブ、オンラインバックアップ、障害復旧に適しています
他のクラウドプロバイダが提供するアーカイブ用のストレージサービスとは異なり、データの取得は数時間や数日ではなくミリ秒単位で可能です
他のクラスとは異なりArchiveには可用性SLAはありませんが、一般的な可用性はNearlineやColdline Storageと同等です
また、Archiveはデータアクセスと操作に関する費用が高く、365日間という最小保存期間も適用されます
Archiveはアクセス頻度が１年に１回未満のデータに最適です
耐久性と可用性に注目しましょう
全ストレージクラスはイレブンナインの耐久性を備えています
これが意味することは、常にファイルにアクセスできるということではありません
データが失われないということです
銀行が開いていなくても、預金は確かにあるのと同じです
これがイレブンナインの耐久性です
でも、銀行の営業時間外には取引できません
これが可用性であり、ストレージクラスとロケーションタイプによって異なります
Cloud Storageはいくつかの項目に分かれています
まず、バケットです
グローバルに一意の名前が必要で、ネストすることはできません
バケットに格納するデータはオブジェクトで、バケットのストレージクラスを継承します
オブジェクトはテキスト、ドキュメント、動画のファイルなどです
サイズの制限はなく、割り当て内であればいくらでも大きくすることができます
データにアクセスするには、gsutilコマンドを使用できます
JSON APIまたはXML APIも使用できます
バケットにアップロードしたオブジェトには、指定しない限り、そのバケットのストレージクラスが割り当てられます
既定のストレージクラスは変更できますが、ロケーションタイプをリージョンからマルチ/デュアルリージョン、またはその逆には変更できません
バケット内の既存のオブジェクトのストレージクラスも変更できます
その際、別のバケットへの移動やオブジェクトURLの変更は不要です
ストレージクラスはオブジェクトごとに設定できます
たとえば、バケット内に維持したオブジェクトに頻繁にアクセスする予定はないとします
その場合、費用を最小限にするためにそのオブジェクトのストレージクラスを、Nearline、Coldline、Archiveに変更できます
バケット内のオブジェクトのクラスを管理するには、オブジェクトのライフサイクル管理を使えます
後で説明します
プロジェクトに含まれるオブジェクトとバケットのアクセス制御に注目しましょう
プロジェクトでIAMを使用すると、どのユーザーまたはサービスアカウントにバケットの参照、オブジェクトの一覧表示、オブジェクト名の表示、バケットの作成を許可するかを制御できます
通常は、Cloud IAMで十分対応でき、ロールがプロジェクトからバケット、オブジェクトに継承されます
アクセス制御リスト（ACL）を使うとさらに細かく制御できます
それ以上に詳細な制御が必要な場合、署名付きURLの暗号鍵を使えば、時間制限付きアクセスをバケットまたはオブジェクトに設定できます
また、署名付きポリシードキュメントで、署名付きURLを使ってアップロードできるファイルの種類を限定すれば、さらに細かく制御できます
ACLと署名付きURLを詳しく見ていきましょう
ACLは、バケットとオブジェクトにアクセスできるユーザーと、アクセスレベルを定義するメカニズムです
バケットまたはオブジェクトに作成できるACLエントリの最大数は100です
各ACLは１つ以上のエントリからなり、各エントリは２つの情報からなります
まず“スコープ”、指定のアクションを実行できるユーザーを定義します
たとえば特定のユーザーやユーザーグループです
次に“権限”、読み取り、書き込みなどの実行可能なアクションを定義します
このスライドの“allUsers”識別子は、Googleアカウントの有無を問わずインターネット上の全ユーザーを表します
一方、“allAuthenticatedUsers”識別子は、Googleアカウントで認証済みの全ユーザーを表します
ACLの詳細は、この動画のリンクセクションをご覧ください
アプリによっては、アカウントベースの認証を使うより、どのユーザーでも使える時間制限付きアクセストークンを付与するほうが簡単で効率的にリソースへのアクセスを制御できます
たとえば、Googleアカウントをアクセスの要件にしない場合、Cloud Storageで署名付きURLを使います
URLを作成し、読み取り/書き込みアクセス権を付与するStorageリソースと、アクセス権の有効期限を指定します
サービスアカウントに関連付けられた秘密鍵でこのURLに署名が付けられます
Cloud Storageはリクエストを受信すると、アクセス付与URLが発行された対象が信頼できるセキュリティプリンシパル（サービスアカウント）であることを確認し、そのアカウントへの信頼をそのURLを知るユーザーに委任します
署名付きURLは、提供すると制御できなくなるので、相応の時間が経過したら期限切れにする必要があります
