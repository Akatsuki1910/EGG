このラボでは、完全な継続的インテグレーションソリューションを、数分で起動できました
JenkinsのUIによるユーザーアクセスを確認し、また、サービスのホストVMにSSHで接続してサービスを停止、再起動することで、Jenkinsに対する管理権限があることも確認しました
このラボで行われた操作の多くはほぼ透過的で、このコースでこれから学ぶリソースとメソッドを使用していました
これらの操作の例としては、ネットワークIPアドレスの取得と設定、VMインスタンスのプロビジョニングとVMへのソフトウェアのインストール、設定プロセスでデフォルト状態の情報を環境から渡す操作などがあります
ラボのチュートリアルの注意点として、GCPのUIが実際の環境とは少し異なる場合があります
GCP Consoleの画面です
まずMarketplaceに移動します
ナビゲーションメニューをクリックすると、上の方に[マーケットプレイス]があるので、これをクリックします
Jenkinsを検索します
“Jenkins Certified by Bitnami”です
これを検索バーに貼り付けます
出てきました
これをクリックします
詳細が表示されて概要を確認できます
Compute Engine上で稼働し、単一のVMを使用すると書かれています
最終更新日、パッケージの内容、オペレーティングシステムも示されます
下にスクロールすると料金を確認できます
VMインスタンス自体に関連する料金設定があります
使用料は設定されていませんが、設定されている場合はここに示され、まとめて請求されます
ここには標準ディスクの料金、そして継続利用割引があります
この詳細は、以降のモジュールで学びます
これらの情報に問題がなければ、[Compute Engine上で起動]をクリックします
インターフェースが表示されるので、ここで名前、ゾーン、マシンタイプなど多数の設定を変更できます
仮想マシンを構成する場合と同様です
再度、ソフトウェア、利用規約、料金を確認できます
確認したら[利用規約に同意します]のチェックボックスをオンにして、[デプロイ]をクリックします
今度はDeployment Managerのインターフェースが表示されます
コースシリーズで後ほど説明しますが、興味深い点として設定プロセスに注目してください
ここにあるファイルはすべての構成が含まれるjinjaファイルです
VMが作成されているところです
２つのファイアウォールルールも、TCPポート80と443に対して作成中です
つまりHTTPとHTTPSです
マシンが起動するまで待ちます
ソフトウェア構成もあります
インストールされるすべてのソフトウェアをここで確認できます
VMインスタンスをクリックすると、詳細を表示できます
VMとファイアウォールルールが起動しました
あとはソフトウェアが構成されるのを待つだけです
ソフトウェアの詳細も確認できます
クリックすると、取得できるすべてのバージョンが表示されます
実行中になると上の表に詳細が取り込まれます
初期化が完了していないので、まだ保留中になっています
完了しました
インスタンスが使用可能になっていますね
ここでは、さまざまな操作を行えます
ここに示されている管理ユーザーのユーザー名とパスワードをコピーできます
[サイトにアクセス]をクリックして、新しいタブでサイトを表示します
外部IPアドレスに移動されます
読み込み中です
起動しているところです
サービスが機能するようにバックグラウンドで、SWがインスタンスにインストールされています
その後に起動する必要もあるので、まだ時間がかかります
稼働中になったら、ユーザー名とパスワードを入力します
[ログイン]をクリックします
ログインすると、カスタマイズを求められるので、Jenkinsに推奨されているプラグインをインストールします
それが完了したら、インスタンスを再起動できます
Deployment ManagerとGCP Marketplaceは次のステップも提案します
たとえば、このパスワードは一時的なものなので変更できます
また、静的外部IPアドレスを割り当てると、常に同じIPアドレスでサイトにアクセスできます
インスタンスにDNSを設定する場合は、こうすると便利です
ここに戻って、インストールする推奨プラグインをクリックします
インストール先インスタンスの場所が示されます
保存して終了します
これで使用を開始できます
サービスが再起動されます
使用できる操作はここでわかります
たとえば、Jenkins自体を管理できます
他にも、実行できるさまざまなアクションが表示されます
サービスを管理することもできます
それには、Consoleに戻り[デプロイメント]で“jenkins-1”を見つけて、SSHボタンをクリックし、このインスタンスにSSHで接続します
これで、サービスとのSSHセッションが確立されます
すべてのサービスをシャットダウンするには、ラボの手順からコマンドをコピーして、ここに貼り付けて実行します
JenkinsのUIに戻って確認します
ページを更新すると表示されなくなります
想定どおりです
先ほどサービスを停止したからです
restartコマンドを実行して、サービスを再起動します
コマンドをコピーして、ここに貼り付けます
これでサービスが再起動するはずです
ページを何度か更新して、再起動したことを確認します
数秒、待ちましょう
更新して再表示されるかどうか確認します
タブの名前が[Starting Jenkins]に変わっています
サービスが再起動したようです
現在サービスを準備中と表示されています
これですべてのタスクを完了したので、SSHセッションに戻ってセッションを終了します
Jenkinsが再び稼働中になったことを確認できます
以上です
