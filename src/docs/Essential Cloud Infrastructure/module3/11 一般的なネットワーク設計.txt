学んだ知識を基に、一般的なネットワーク設計を確認しましょう
“一般的”と言うとあいまいですね
ネットワーク設計は幅広いトピックなので、ここではこのモジュールに関連する点に絞って説明します
まずは可用性に注目しましょう
アプリの可用性を高める必要がある場合は、スライドに示すように、同じサブネット内の異なるゾーンに２つのVMを配置します
こうすると１つのサブネットを対象にファイアウォールルールを作成できます
この例ではサブネット10.2.0.0/16に対するルールです
複数のVMを同じサブネット内の別々のゾーンに割り当てると、セキュリティを複雑にすることなく可用性を強化できます
リージョンマネージドインスタンスグループは、同一リージョンの複数のゾーンにインスタンスを配置するので可用性が高まります
次は、グローバリゼーションに注目します
先ほどの設計では同一リージョン内の異なるゾーンにリソースを配置して、インフラ、ハードウェア、ソフトウェアの各種障害からの分離を実現していました
ここに示すように、複数のリージョンにリソースを配置すると、障害からの分離をさらに強化できます
つまり、複数の障害発生ドメインにリソースを分散した、堅牢なシステムを設計できます
HTTPロードバランサなどのグローバルロードバランサを使えば、ユーザーに最も近いリージョンにトラフィックを転送できます
その結果、低レイテンシのUXとネットワーク費用の削減が可能になります
マネージドインスタンスグループとロードバランサについては後ほど学習します
一般的なセキュリティのベストプラクティスとして、VMインスタンスにはできる限り内部IPアドレスのみを割り当ててください
Cloud NATはGoogleのマネージドネットワークアドレス変換サービスです
このサービスを使用すると、アプリにパブリックIPアドレスを割り当てなくても、管理された効率的な方法でアプリがインターネットにアクセスできます
つまり、プライベートインスタンスがインターネットにアクセスして、更新、パッチ適用、構成管理などを行えます
この図では、２つのプライベートインスタンスがCloud NATを使って、“送信NAT”という方法でインターネット上の更新サーバーにアクセスしています
しかし、Cloud NATでは受信NATは提供されません
したがって、VPCネットワーク外部のホストはCloud NATゲートウェイの背後のプライベートインスタンスに直接接続できません
そのため、VPCネットワークを分離して保護できます
同様に限定公開のGoogleアクセスを有効にすると、内部IPアドレスのみを持つVMインスタンスがGoogleのAPIとサービスの外部IPアドレスにアクセスできるようになります
たとえば、プライベートVMインスタンスがCloud Storageバケットにアクセスするには、限定公開のGoogleアクセスが必要です
限定公開のGoogleアクセスはサブネットごとに有効にします
この図では、限定公開のGoogleアクセスがサブネットAでは有効にされて、サブネットBでは無効にされています
そのため、VM A1は外部IPアドレスがなくてもGoogleのAPIとサービスにアクセスできます
限定公開のGoogleアクセスは、外部IPアドレスを持つインスタンスには影響しません
そのため、VM A2とB2はGoogleのAPIとサービスにアクセスできます
これらにアクセスできないVMはVM B1のみです
このVMにはパブリックIPアドレスがなく、限定公開のGoogleアクセスが無効なサブネット内に配置されているためです
