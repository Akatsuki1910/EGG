多くのユーザーはGoogle Cloudのプロダクトや、サービスを使って優れたアプリを開発し、アプリが完成するとGoogle Cloudを使ってデプロイできます
このセクションでは、Google Cloudでクラウドでの開発用に用意されている、Cloud Source Repositories、Cloud Functions、Terraformについて説明します
その後、コードとしてのインフラを使ったデプロイを見てみます
まず、クラウドでの開発について考えます
多くのGoogle Cloud顧客は、ソースコードツリーの保存、バージョニング管理にGitリポジトリを使っています
完全な制御が必要な場合は独自のGitインスタンスを実行します
完全な制御が不要なら、作業負荷が減るようにホストされたGitプロバイダを使います
でも、Google Cloudプロジェクトだけにコードを公開し、IAMの権限によってプロジェクトを保護でき、Gitインスタンスを自分で管理しなくてよい、第３の選択肢があったらどうですか？
これを実現するのがCloud Source Repositoriesです
Cloud Source Repositoriesは、Google Cloudでホストされる多機能のGitリポジトリを提供し、App EngineとCompute Engineでも実行されるすべてのアプリやサービスの共同開発をサポートしています
Cloud Source Repositoriesでは、プライベートGitリポジトリをいくつでも持ち、クラウドプロジェクトに関連付けられたコードを自身が選ぶ方法で整理できます
またデバッガやError ReportingなどのGoogle Cloud診断ツールで、Gitリポジトリのコードを使用し、ユーザーの作業を遅延させることなくデプロイ済みコードの特定のエラーまで問題を追跡できます
GitHubやBitBucketのリポジトリにコードがある場合は、コードをクラウドプロジェクトに移行して、ブラウジングや診断など他のリポジトリと同じように使えます
多くのアプリには、イベントドリブンな要素があります
たとえば、ユーザーが画像をアップロードできるアプリを考えます
そのイベントの発生時には画像を複数の方法で処理する必要があります
画像を標準形式に変換、サムネイルを各種サイズに変換、新しいファイルをリポジトリに保存などです
この機能をアプリに統合することも可能ですが、イベントの頻度が１ミリ秒に１回であれ１日に１回であれ、演算リソースを提供する必要があります
Cloud Functionsを使うと、必要な画像処理を行う単一目的の関数を記述し、画像がアップロードされるたびに自動的に実行されるように設定できます
Cloud Functionsは軽量、イベントベース、非同期の演算ソリューションです
クラウドイベントに対応できる単一目的の小規模な関数を作成でき、サーバーやランタイム環境を管理する必要はありません
これらの関数を使用して、個々のビジネスロジックタスクからアプリワークフローを構築できます
また、クラウドサービスを接続、拡張することもできます
課金は100ミリ秒単位で行われますが、課金されるのはコードが実行中の間のみです
個々の関数はJavaScript（Node.js）PythonやGoで書かれ、Google CloudのNode.jsマネージド環境で実行されます
Cloud StorageとPub/Subのイベントにより、関数を非同期的にトリガーでき、HTTP呼び出しによる同期実行も可能です
