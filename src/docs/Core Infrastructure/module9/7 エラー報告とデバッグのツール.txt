このセクションの締めくくりとして、エラーレポートとデバッグ用のGoogle Cloudのツールを紹介します
Error Reportingは、稼働中のクラウドサービスのクラッシュをカウント、分析、集計します
最近の言語の大半ではクラッシュは例外なので、コード自体では対処できません
管理インターフェースに表示される結果は、ソートと絞り込みが可能です
専用ビューにエラーの詳細が表示されます
タイムチャート、発生回数、影響するユーザー数、初回/最終発生日、解決済みの例外スタックトレースを確認できます
アラートを作成して、新規エラーの通知も受け取れます
Cloud Debuggerでは本番稼働中のアプリを、停止も干渉もせずにデバッグできるので、実際の本番環境でコードの機能とパフォーマンスを検証できます
他のチームメンバーとの協力も簡単です
ConsoleのURLを送るだけで、デバッグセッションを共有できます
アプリや本番環境の状態を、行を指定したスナップショットで取得できます
ログポイントでは、新しいログステートメントをオンデマンドで任意の行に挿入できます
スナップショットを取得したり、アプリの言語で簡単な条件式を使ってログポイントメッセージを書いたりできます
Cloud Debuggerは既存の開発ワークフローと簡単に統合できます
Debuggerの起動とスナップショットの取得は、Cloud Logging、Error Reporting、ダッシュボード、IDE、gcloudコマンドラインで直接実行できます
Debuggerではソースコードの正しいバージョンが表示されます
バージョン管理システムと簡単に統合できるからです
Cloud Source Repositories、GitHub、Bitbucket、GitLabなどのシステムです
Cloud TraceはGoogleが本番環境サービスで使用するツールをベースとしたトレースシステムです
分散アプリからレイテンシデータを収集して、Google Cloud Consoleに表示します
Traceがトレースを取得できるのは、App Engine、Compute Engine VM、k8s Engineコンテナ環境のアプリです
パフォーマンス分析情報がほぼリアルタイムで得られます
Traceがアプリの全トレースを自動的に分析し、詳細なレイテンシレポートを生成するのでパフォーマンス低下を把握できます
Traceはトレースデータを継続的に収集して分析し、アプリのパフォーマンスに最近生じた変化を自動的に特定します
コードのパフォーマンスが悪いのに、誰も気付かないか、何も対策がされないと、アプリやウェブサービスのレイテンシとコストが日々増加します
Cloud Profilerはこの状況を変えるため、すべての本番アプリインスタンスで実行される超低インパクトの計装と統計的手法により、アプリの速度を落とすことなくCPUとヒープの全体像を把握できます
Compute Engine VM、App Engine、k8sなど幅広いプラットフォームをサポートし、Google Cloud、他のクラウド、オンプレミスなど、どこで実行中のアプリでも分析できます
Java、Go、Python、Node.jsをサポートします
Cloud Profilerは呼び出し履歴と関連する関数のリソース消費量を、インタラクティブなフレームグラフに表示します
これにより開発者は最もリソースを消費しているパスや、実際にコードが呼び出されている多様な状況を把握できます
