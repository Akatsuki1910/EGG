このアクティビティの課題は、高可用性、スケーラビリティ、耐久性を考慮したアプリのデプロイ方法を示す図の作成でした
オンライン旅行アプリのClickTravelは米国企業が提供するものですが、ヨーロッパに多くの顧客が存在します
UIの可用性を高めるため、グローバルHTTPロードバランサの背後のus-central1とeurope-west2に配置しました
このロードバランサはユーザーに最も近いリージョンにリクエストを送信します
ただし、そのリージョンで処理できない場合は例外です
バックエンドはグローバルにデプロイできますが、費用最適化のため、まずus-central1にのみデプロイします
ヨーロッパのユーザーにレイテンシが発生しますが、いつでも修正してeurope-west2に同様のバックエンドを配置できます
高可用性を実現するために、注文サービスと在庫サービスを複数のゾーンにデプロイすることにしました
分析サービスは顧客向けではないため、１つのゾーンにデプロイして費用を削減できます
ここでもフェイルオーバー用のCloud SQL DBを使っています
Firestore DBとBigQuery DWHはマルチリージョンなので、フェイルオーバーを考慮する必要はありません
障害に備えて、マルチリージョンのCloud Storageバケットにバックアップを保持すると、１つのリージョンが停止しても別のリージョンで復旧できます
