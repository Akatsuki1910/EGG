最後のトピックは暗号化です
Google Cloudは既定で、データを保存時に暗号化します
ユーザー側のアクションは不要です
暗号化には、AES-256対称鍵を使用したデータ暗号鍵（DEK）が使われます
Googleはこの鍵自体も鍵暗号鍵（KEK）を使用して暗号化します
その目的は、暗号化されたデータの近くにDEKを保存して迅速な復号を可能にし、パフォーマンスへの影響を防ぐためです
KEKはセキュリティを確保するために、Cloud KMSに保存され、さらにセキュリティを強化するために自動的に定期ローテーションが行われます
この図はCloud Storageを使った単純なApp Engineアプリを示しています
データはAES-256を使用したDEKで暗号化され、読み込みの際にアプリに対して透過的に復号されます
コンプライアンス上の理由から、自動生成される鍵ではなく、お客様が独自の鍵を管理しなければならない場合もあります
その場合はCloud Key Management Service（Cloud KMS）で、顧客管理の暗号鍵（CMEK）と呼ばれる鍵を生成できます
CMEKはCloud KMSに保存されるので、Cloudサービスで直接使用できます
ここに示すようなダイアログを使用して、CMEKを手動で作成し、ローテーションの頻度を指定できます
デフォルトの頻度は90日です
作成したCMEKはディスクやバケットなどのストレージリソースの作成時に使用できます
独自の暗号鍵の生成や、オンプレミスでの管理が必要な場合、Google Cloudでは顧客指定の暗号鍵（CSEK）を使用できます
CSEKはGoogle Cloudではなく、オンプレミスに保管されます
CSEKはAPIサービス呼び出しの一部として渡されます
Googleはこの鍵をメモリにのみ保管し、単一のペイロードや返されたデータブロックを復号する際に使用します
現在、CSEKはCloud StorageとCompute Engineで使用できます
Data Loss Prevention APIを使用して、機密データを検出し秘匿化して保護することも検討してください
Cloud DLPは機密データの要素を高速かつスケーラブルに分類して秘匿化します
たとえばクレジットカード番号、名前、社会保障番号、米国と一部諸国の身分証明書番号、電話番号、Google Cloud認証情報などの要素です
Cloud DLPはこれらのデータを分類するために、90種以上の定義済み検出項目に基づき、パターン、フォーマット、チェックサムを識別し、そのコンテキストまで考慮します
右側に検出項目の例を示しています
データの秘匿化手法としては、必要に応じてマスキング、セキュアハッシュ、トークン化、バケット化、フォーマット保持暗号化なども使用できます
