APIの設計に話題を移します
サービスには一貫性のあるAPIを設計することが重要です
Googleが提供しているAPI設計ガイドには、名前、エラー処理の文書化、バージョニング、互換性などに関する推奨事項が記載されています
スライドで、このガイドとAPIスタイルブックをリンクしています
ベストプラクティスの例については、Google Cloud APIsが参考になります
Google Cloudの各サービスは、REST APIを公開しています
関数は、service.collection.verbという形式で定義されます
サービスは、サービスエンドポイントを表し、たとえばCompute Engine APIの場合、サービスエンドポイントはcompute.googleapis.comです
コレクションには、instances、instanceGroups、instanceTemplatesなどがあり、動詞にはlist、get、insertなどがあります
Compute Engineインスタンスを一覧するには、スライド上のリンクに対してGETリクエストを送信します
パラメータはURLまたはJSON形式のリクエスト本文のいずれかで渡されます
OpenAPIはクライアントにAPIを公開するための業界標準です
この仕様のバージョン2.0はSwaggerと呼ばれています
Swaggerは現在、OpenAPIを中心にビルドされたオープンソースツールからなり、関連するツールとともにAPIの設計、ビルド、利用、文書化をサポートしています
OpenAPIは、APIファースト手法に役立ちます
OpenAPIでAPIを設計すると、信頼できる情報源を１つに絞って、その情報源からクライアントライブラリとサーバースタブのソースコードを自動生成でき、APIユーザードキュメントも生成できます
OpenAPIはCloud EndpointsとApigeeでサポートされます
このサンプルドキュメントは、ペットショップサービスのOpenAPI仕様の例を示しています
URIは“petstore.swagger.io/v1”です
URIにはバージョンが含まれます
例に示されているエンドポイント/petに、HTTP動詞のGETでアクセスするとすべてのペットのリストが返されます
Googleで開発されたgRPCは、マイクロサービスの内部通信に役立つバイナリプロトコルです
多数のプログラミング言語に対応し、プロトコルバッファを使用して定義されたコントラクトで疎結合をサポートします
しかもバイナリプロトコルであるため、高パフォーマンスです
HTTP/2をベースとし、クライアントとサーバー両方のストリーミングに対応します
gRPCは多くのGoogle Cloudサービスでサポートされており、グローバルロードバランサやCloud Endpointsなどで使用できます
Envoyプロキシを使用することで、GKEでも使えます
Google Cloudには、API管理用のツールが２つあります
Cloud EndpointsとApigeeです
Cloud EndpointsはAPI管理ゲートウェイで、任意のGoogle CloudバックエンドでのAPIの開発、デプロイ、管理を支援します
Google Cloud上で動作し、Googleのインフラを大いに活用します
Apigeeは企業向けのAPI管理プラットフォームであり、クラウド、オンプレミス、またはハイブリッドにデプロイできます
機能セットには、API ゲートウェイ、パートナーと開発者に合わせてカスタマイズ可能なポータル、収益化、APIを中心としたディープ分析などが含まれます
Apigeeは任意のHTTP、HTTPS、バックエンドに対して使用でき、オンプレミス、パブリッククラウドなど実行場所は問いません
どちらのソリューションにも、ユーザー認証、モニタリング、保護などに対応するためのツールと、OpenAPIとgRPC向けのツールが用意されています
