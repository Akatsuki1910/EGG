SLOは、妥当性がきわめて重要です
ユーザー体験を支援、改善する目標を設定する必要があります
有用性よりも測定しやすさを基準にすると、SLOを簡単に定義できます
SLOの測定方法と達成条件を指定すれば、SLOが明確になります
たとえば、稼働時間を10秒おきにチェックし、１分単位で集計して可用性を測定するとします
この場合、SLOの目標値を100%にするのは現実的でなく、望ましくもありません
目標が高すぎると、過度に保守的で高価なソリューションになるうえ、SLOも達成できません
SLOの達成率は記録し、低い場合は改善する必要があります
多くの場合、可用性は99%で十分です
その方が達成も設計もはるかに簡単です
また、運用の費用対効果も格段に向上するでしょう
ユースケースも検討する必要があります
たとえば、写真アップロード用のHTTPサービスがあり、アップロードの99%を100ミリ秒以内に完了するという目標を立てたとします
大半のユーザーがスマホを使っているなら、これは非現実的で高すぎる目標です
この場合は、SLOを80%にする方がはるかに達成可能であり、それで十分です
複数のSLOを指定するのも効果的です
HTTP GET呼び出しの99%を100ミリ秒未満で完了させたいとします
これは有効なSLOですが、場合によってはパフォーマンス曲線の形状が重要になります
この場合は、次のようにSLOを記述します
“HTTP GET呼び出しの90%を50ミリ秒未満で完了する”
“HTTP GET呼び出しの99%を100ミリ秒未満で完了する”
“HTTP GET呼び出しの99.9%を500ミリ秒未満で完了する”
SLOの選択は、プロダクトとビジネスの両方に影響します
多くの場合、スタッフや市場投入までの時間、資金などの制約に基づいてトレードオフを考慮します
このように、目的はユーザーの満足度を維持することであり、多大な労力を必要とするSLOを設定することではありません
SLOを選択する際のヒントを紹介しましょう
“目標を高くしすぎないこと“
達成に多大な労力とコストが必要なSLOを定義するのではなく、最初はSLOを低めに設定し、システムを理解するにつれて徐々に高くしていくことをおすすめします
“簡潔にすること”
複雑なSLOでは、パフォーマンスの重要な変化が見えにくくなります
“絶対値を回避すること”
SLOに100%の可用性と記述するのは非現実的です
このようなSLOでは、構築時間、複雑性、運用コストが増大します
多くの場合、そこまでは求められていません
“SLOは最小限に”
よくある間違いはSLOの数が多すぎることです
システムの主な属性に絞ってSLOを設定することをおすすめします
優れたSLOを策定する秘訣は、ユーザーに重要な要素を盛り込むことです
そのようなSLOは開発チームの原動力となります
SLOが高すぎると無駄な作業が大量に発生し、低すぎるとプロダクトの品質が低くなります
SLAは、サービスプロバイダとお客様との間のビジネス契約です
合意したレベルをサービスプロバイダが維持できない場合は、ペナルティが課されます
SLAのないサービスもありますが、その場合でもSLOは必ず必要です
SLOと同様にSLAは控えめに設定してください
実効性のないSLAや、多大な労力を必要とするSLAでも、一度締結すると変更、破棄するのが難しいからです
お客様への補償が規定されている場合は、財務的な影響を受ける可能性もあります
SLAの設定を高くしすぎると、不必要な補償を支払う羽目になりかねません
そうした状況に陥らないよう、余裕を持たせるためにSLAのしきい値はSLOよりも低く設定します
例外なくそうしてください
あるサービスを例に、SLI、SLO、SLAの関係について考えてみましょう
このサービスは、HTTP GETを使用してアクセスされるHTTPエンドポイントです
SLIは、成功したHTTPレスポンスのエンドツーエンドのレイテンシです
HTTP-200が返されるまでの時間を１分単位で集計し、平均値を出します
合意したSLOは、レスポンスの99%のレイテンシが200ミリ秒未満であることです
SLAは、99パーセンタイルのレイテンシが300ミリ秒を超えた場合に、ユーザーに補償を支払うと設定されています
つまり、SLOよりも条件が緩いので、SLOを超えてしまった場合でもある程度まではSLA違反を回避できます
このように、SLOとSLAの間に余裕を持たせるのが理想的です
