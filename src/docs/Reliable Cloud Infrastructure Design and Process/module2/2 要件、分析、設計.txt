まず、要件、分析、設計について説明しましょう
要件を策定するときは、次の点を自問してみてください
“誰が”、“何を”、“なぜ”、“いつ”、“どのように”です
“誰が”では、システムのユーザーだけでなく開発者や関係者も決定します
この問いの目的は、システムが直接的、間接的に影響を及ぼす人物の全体像を把握することです
“何を”は、シンプルですが難しい問いです
ここで特定するのは必要な機能のメインの部分ですが、曖昧ではなく明確にする必要があります
システムが“なぜ”必要かという問いは非常に重要です
開発するシステムで対処、解決したいことは何でしょう？
ニーズを明確に理解していないと余分な要件を加えてしまう可能性があります
“なぜ”を明らかにすると、KPI、SLO、SLAの定義も簡単になります
“いつ”は現実的なタイムラインや範囲を決める際に考えます
“どのように”は機能以外の多数の要件を特定するときに考えます
たとえば、システムで同時にサポートするユーザーの数や、サービスリクエストの平均ペイロードサイズ、レイテンシ要件の有無などです
ユーザーの所在地が世界中か特定の地域のみかという要件もあります
いずれも、提供するソリューションに影響する重要な要件であるため、もれなく盛り込む必要があります
前回の設計アクティビティでは、アプリのユーザーロールを定義しました
ロールとは、ある時点でのユーザーの目標です
ロールによって、特定の内容の要件が分析可能になります
重要なのは、ロールが必ずしも人とは限らないことです
ロールはシステムを動かす主体です
そのため、他のサービスにアクセスするサービスクライアントなども、ロールと考えることができます
ロールには、システムを使用するユーザーの目標を定義する必要があります
たとえば、eコマースアプリの買い物客というロールには、そのユーザーが何をしたいのかを明確に定義します
要件に盛り込むロールを決定する方法は多数あります
特に効果的な方法を紹介しましょう
まず、ロールの初期セットについて考えます
１つのロールを１人のユーザーと見なし、思い付く限りのロールを書き出します
続いて、この初期セットを整理します
重複するロールや関連するロールを洗い出して、グループ化します
ロールセットをグループ化したら、ロールを統合します
この作業の目的は、ロールを統合、集約して重複を排除することです
最後に、内外のロールとそのさまざまな使用パターンを調整します
この段階で補足情報を追加できます
たとえば、ユーザーの専門分野の知識レベルや開発するソフトウェアの使用頻度などの情報です
このように、簡単なプロセスに従ってタスクを構造化し、焦点を絞り込みます
ユーザーロールの特定は、要件の収集に有用な手法の一つです
重要なロールを特定する際に特に有効なのがロールのペルソナを作成する手法です
ペルソナとは、ユーザーロールの想像上の人物を表すものです
ペルソナの目的は、ユーザーの人物像を描くことで、アーキテクトや開発者がユーザーの特性を具体化することです
通常、１つのロールに複数のペルソナが存在します
例として、バンキングアプリの要件を考えてみましょう
システムのユーザー目線から見れば、求める要件は多数ありますね
ペルソナを使えば、さらに具体的な要件が見えてきます
たとえば、Jocelynは多忙なワーキングマザーです
時間とお金を節約するために、日常の銀行取引をオンラインで行い、キャッシュバックを受けたいと考えています
ペルソナを使うと、要件の全体像をより明確に描くことができます
たとえば、時間の節約という願望は、タスクの自動化が必要ということを示しているため、レイテンシとサービスの設計に影響します
この例で、アーキテクトや開発者が生じた疑問の正確な答えを導き出すには、“こんなときJocelynならどうしたいか”を考えることです
ユーザーストーリーでは、ユーザーがシステムに望むことを１つ記述します
一般的には、“あるタイプのユーザーとして”、“何をしたいか”、“それによってどんなメリットが得られるか”という形式で書きます
もう一つの一般的な書き方は、“ある状況“で、“ある操作をしたときに“、“こうなってほしい“という形式です
ストーリーを書くときは、まず各ストーリーに目的に沿ったタイトルを付けます
その後に、先ほどのいずれかの形式でストーリーを１文で簡潔に書きます
これで、“ユーザーロール”、“ユーザーの希望“、”その理由“を表現できます
たとえば、ある銀行システムで、銀行口座の残高照会を行うストーリーを考えてみましょう
タイトルは“残高照会”にします
次に、形式に従ってストーリーを書きます
“口座の名義人として“、“残高不足が起こらないようにするために”、“利用可能額をいつでも確認したい”となります
“ユーザーロール“、“ユーザーの希望“、“その理由"が表現されていますね
ユーザーストーリーなら単純明快な方法で、お客様やエンドユーザーから要件の合意を得ることができます
ユーザーストーリーが適切かどうかはINVEST基準を使って判断します
“INVEST”の各文字について説明します
Independent（独立性）、優先順位や計画の問題を回避するためにストーリーは独立させます
Negotiable（交渉可能）、ストーリーは書面による契約ではありません
お客様と開発者が明確な合意に至るまで、交渉とコラボレーションを促すために使用します
Valuable（価値的）、価値をもたらすストーリーにします
成果物ではなく成果や影響を考えます
Estimable（見積もり可能）、見積もり可能なストーリーにします
詳細が不十分だったり、範囲が広すぎると見積もることができません
Small（小規模）、よいストーリーは小規模です
範囲が絞られるため曖昧な点が少なくなり、ユーザーから迅速にフィードバックを得られます
Testable（テスト可能）、テスト可能なストーリーにします
開発者はストーリーが適切に反映され、要件を満たしていることを検証する必要があるからです
