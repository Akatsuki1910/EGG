Cloud CDNは、世界各地に分散されたGoogleのエッジ接続拠点を使用して、HTTP(S)の負荷分散コンテンツをユーザーの近くでキャッシュします
具体的には、このマップで示すCDNノードにコンテンツをキャッシュできます
このようなキャッシュサイトが、アジア太平洋、南北アメリカ、EMEA地域の大都市圏に90か所以上存在します
サイトの最新リストについてはCloud CDNのドキュメントをご覧ください
では、Cloud CDNの使用を検討すべき理由は何でしょうか？
Cloud CDNではコンテンツをGoogleネットワークのエッジにキャッシュし、ユーザーへのコンテンツ配信を高速化しつつ、サービスコストも低減します
Cloud CDNの有効化は、HTTP(S)ロードバランサのバックエンドサーバーの設定時にチェックボックスをオンにするだけです
簡単に有効化でき、貴社とユーザーにメリットがあります
Cloud CDNは、どのような仕組みなのでしょうか？
Cloud CDNのレスポンスの流れをこの図で説明します
この例ではHTTP(S)ロードバランサに、２種類のバックエンドがあります
us-central1とasia-east1リージョンのマネージドVMインスタンスグループと、us-east1リージョンのCloud Storageバケットです
URLマップによって、コンテンツの送信先バックエンドが決まります
静的コンテンツに対しては、Cloud Storageバケットが使用でき、インスタンスグループでPHPトラフィックを処理します
たとえば、東京のユーザーが何かのコンテンツにアクセスして、東京のキャッシュサイトがリクエストに応じられないと判断した場合、それをキャッシュミスといいます
キャッシュは付近のキャッシュでコンテンツ取得を試みます
大阪のユーザーがすでにそのコンテンツに、アクセスしてる場合があればです
そうでない場合、リクエストはHTTP(S)ロードバランサに転送され、さらにバックエンドのひとつに転送されます
配信されるコンテンツに応じて、リクエストはus-central1インスタンスグループに転送され、us-east1のStorageバケットに転送されます
バックエンドからのコンテンツがキャッシュ可能であれば、将来のリクエストに備えて東京のキャッシュサイトで保管できます
すなわち、別のユーザーが東京で同じコンテンツをリクエストすると、そのキャッシュサイトからコンテンツを配信できるようになるため、ラウンドトリップ時間が減り、元のサーバーがリクエストを処理する必要がなくなります
これをキャッシュヒットといいます
キャッシュされるコンテンツの詳細は、ドキュメントを参照してください
Cloud CDNの各リクエストは、Google Cloud内に自動的に記録されます
ロードバランサから出された、各HTTP(S)リクエストについてキャッシュヒットかキャッシュミスかのステータスが、そのログで示されます
このログについては、次のラボで説明します
Cloud CDNのコンテンツのキャッシュ方法は、どうすればわかるでしょうか
どのように制御するのでしょうか
ここで便利なのがキャッシュモードです
キャッシュモードでは、Cloud CDNでコンテンツをキャッシュするかどうかを決定する要素を制御できます
Cloud CDNには、キャッシュモードが３つあり、レスポンスをキャッシュする方法と、送信元から届いたキャッシュディレクティブを、Cloud CDNが遵守するかどうかと、キャッシュTTLの適用方法を定義します
使用可能なキャッシュモードは、USE_ORIGIN_HEADERSとCACHE_ALL_STATICとFORCE_CACHE_ALLです
USE_ORIGIN_HEADERSモードでは、元のレスポンスで、有効なキャッシュディレクティブと有効なキャッシュヘッダーを設定する必要があります
CACHE_ALL_STATICモードでは、no-store、private、no-cacheのいずれのディレクティブもない静的コンテンツを、自動的にキャッシュします
有効なキャッシュディレクティブを設定する元のレスポンスもキャッシュされます
FORCE_CACHE_ALLモードでは、レスポンスを無条件にキャッシュに保存し、送信元のキャッシュディレクティブ設定をすべて上書きします
このモードで共有バックエンドを使用している場合は、動的HTMLやAPIレスポンスなどのユーザー単位の非公開コンテンツはキャッシュしないようにします
